@using Dul.Web

<h3>ArticlePager</h3>

<div class="d-flex">

    <ul class="pagination pagination-sm mx-auto">
        @*처음 링크*@
        @if (Model.PageNumber == 1)
        {
            <li class="page-item">
                <a class="page-link first btn disabled"><span style="font-size: 7pt;">FIRST</span></a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link first btn" @onclick="@(() => PagerButtonClicked(1))"><span style="font-size: 7pt;">FIRST</span></a>
            </li>
        }

        <li>
            <input type="button" value="1페이지" @onclick="@(() => PagerButtonClicked(1))" />
        </li>
        <li>
            <input type="button" value="2페이지" @onclick="@(() => PagerButtonClicked(2))" />
        </li>
        <li>
            <input type="button" value="3페이지" @onclick="@(() => PagerButtonClicked(3))" />
        </li>

        @*마지막 링크*@
        @if (Model.PageNumber != Model.PageCount)
        {
            <li class="page-item">
                <a class="page-link first btn" @onclick="@(() => PagerButtonClicked(Model.PageCount))"><span style="font-size: 7pt;">Last</span></a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link first btn disabled" ><span style="font-size: 7pt;">Last</span></a>
            </li>
        }
    </ul>
</div>


@code {
    // 부모로부터 모든 페이저 관련된 정보가 담김 PagerBase 객체 받음
    [Parameter]
    public PagerBase Model { get; set; }

    //Parameter가 넘어오면 자동으로 Pager.PageCount 계산
    protected override Task OnParametersSetAsync()
    {

        Model.PageCount = Convert.ToInt32(Math.Ceiling(Model.RecordCount / (double)Model.PageSize));
        return base.OnParametersSetAsync();
    }
    // 부모의 콜백 메서드를 PageIndexChanged 대리자로 받음
    [Parameter]
    public EventCallback<int> PageIndexChanged { get; set; }

    // Pager 버튼 클릭할 때 현재 클릭한 페이지 번호를 받아서 부모에게 전달
    private void PagerButtonClicked(int pageNumber)
    {
        Model.PageNumber = pageNumber;
        Model.PageIndex = pageNumber - 1;

        PageIndexChanged.InvokeAsync(pageNumber - 1); //PageIndex를 부모 창으로 전송
    }
}
