@page "/Articles/Details/{Id:int}"

@inject IArticleRepository ArticleRepository
@inject IVotedUserRepository VotedUserRepository
@inject AuthenticationState _authenticationState


<h3>Details</h3>
<hr />

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label for="id">Id: </label> @Model.Id
            </div>
            <div class="form-group">
                <label for="id">Title: </label> @Model.Title
            </div>
            <div class="form-group">
                <hr />
                <label for="id">Content</label>
                <hr />

                @Model.Content
            </div>
            <div class="form-group">
                <label for="id">Topic: </label> @Model.Topic
            </div>
            <div class="form-group">
                <label for="id">Value: </label> @Model.Value
            </div>
            <div class="form-group">
                <AuthorizeView>
                    <Authorized>
                        <a href="/Articles/Edit/@Model.Id" class="btn btn-secondary">Edit</a>
                        <a href="/Articles/Delete/@Model.Id" class="btn btn-danger">Delete</a>
                    </Authorized>
                </AuthorizeView>

                <a href="/Articles" class="btn btn-primary">List</a>
            </div>
            <div>
                <AuthorizeView>
                    <Authorized>
                        <button class="btn btn-primary" @onclick="submitClick">

                        </button>
                    </Authorized>
                </AuthorizeView>

            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    public Article Model { get; set; } = new Article();
    protected string userName { get; set; };

    protected override async Task OnInitializedAsync()
    {
        Model = await ArticleRepository.GetArticleByIdAsync(Id);
        var authState = await
    }
    private void submitClick(MouseEventArgs e)
    {

    }

    /// <summary>
    /// 밑에는 Create의 코드.
    /// </summary>

    //protected async Task btnSubMit_Click()
    //{
    //    //저장로직 구현
    //    await ArticleRepository.AddArticleAsync(Model);

    //    // 리스트 페이지로 이동
    //    NavigationManager.NavigateTo("/Articles");
    //}
}
